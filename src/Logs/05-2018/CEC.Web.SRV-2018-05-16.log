2018-05-16 11:48:36.3851 ERROR CEC.Web.SRV.EDayExport.ExportStageExecuter.WriteLog Unhandled exception occured: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] NHibernate.Exceptions.GenericADOException: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] ---> System.Data.SqlClient.SqlException: The INSERT statement conflicted with the FOREIGN KEY constraint "FK_AssignedVoter_Village". The conflict occurred in database "SAISE.ElectionDay20171119", table "dbo.Village", column 'VillageId'.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   --- End of inner exception stack trace ---
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   at NHibernate.Impl.StatelessSessionImpl.ExecuteNativeUpdate(NativeSQLQuerySpecification nativeSQLQuerySpecification, QueryParameters queryParameters)
   at NHibernate.Impl.SqlQueryImpl.ExecuteUpdate()
   at CEC.Web.SRV.EDayExport.SaiseRepository.AssignVoterToElection(Int64 saiseElectionId) in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\SaiseRepository.cs:line 276
   at CEC.Web.SRV.EDayExport.VoterExporter.ExecuteStateInternal() in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\VoterExporter.cs:line 104
2018-05-16 11:49:02.3297 ERROR CEC.Web.SRV.Infrastructure.HandleAndLogErrorAttribute.OnException  NHibernate.TransactionException: Begin failed with SQL exception ---> System.InvalidOperationException: Timeout expired.  The timeout period elapsed prior to obtaining a connection from the pool.  This may have occurred because all pooled connections were in use and max pool size was reached.
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at NHibernate.Connection.DriverConnectionProvider.GetConnection()
   at NHibernate.AdoNet.ConnectionManager.GetConnection()
   at NHibernate.Impl.SessionImpl.get_Connection()
   at NHibernate.Transaction.AdoTransaction.Begin(IsolationLevel isolationLevel)
   --- End of inner exception stack trace ---
   at NHibernate.Transaction.AdoTransaction.Begin(IsolationLevel isolationLevel)
   at NHibernate.Transaction.AdoTransaction.Begin()
   at NHibernate.Impl.SessionImpl.BeginTransaction()
   at Amdaris.NHibernateProvider.LazySessionManager.<>c__DisplayClass1.<StartSession>b__0()
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.LazyInitValue()
   at System.Lazy`1.get_Value()
   at Amdaris.NHibernateProvider.LazySessionContext.CurrentSession()
   at NHibernate.Impl.SessionFactoryImpl.GetCurrentSession()
   at CEC.SRV.BLL.Repositories.SrvRepository.get_Session() in D:\work\CEC\CEC.SRV\src\CEC.SRV.BLL\Repositories\SrvRepository.cs:line 64
   at Amdaris.NHibernateProvider.Repository.Query[T]()
   at CEC.SRV.BLL.Impl.NotificationBll.CountUnReadNotifications() in D:\work\CEC\CEC.SRV\src\CEC.SRV.BLL\Impl\NotificationBll.cs:line 39
   at CEC.Web.SRV.Controllers.NotificationController.GetCountNotification() in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\Controllers\NotificationController.cs:line 57
   at lambda_method(Closure , ControllerBase , Object[] )
   at System.Web.Mvc.ActionMethodDispatcher.Execute(ControllerBase controller, Object[] parameters)
   at System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   at System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<BeginInvokeSynchronousActionMethod>b__39(IAsyncResult asyncResult, ActionInvocation innerInvokeState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`2.CallEndDelegate(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
2018-05-16 11:49:02.3297 ERROR CEC.Web.SRV.Infrastructure.HandleAndLogErrorAttribute.OnException  NHibernate.TransactionException: Begin failed with SQL exception ---> System.InvalidOperationException: Timeout expired.  The timeout period elapsed prior to obtaining a connection from the pool.  This may have occurred because all pooled connections were in use and max pool size was reached.
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at NHibernate.Connection.DriverConnectionProvider.GetConnection()
   at NHibernate.AdoNet.ConnectionManager.GetConnection()
   at NHibernate.Impl.SessionImpl.get_Connection()
   at NHibernate.Transaction.AdoTransaction.Begin(IsolationLevel isolationLevel)
   --- End of inner exception stack trace ---
   at NHibernate.Transaction.AdoTransaction.Begin(IsolationLevel isolationLevel)
   at NHibernate.Transaction.AdoTransaction.Begin()
   at NHibernate.Impl.SessionImpl.BeginTransaction()
   at Amdaris.NHibernateProvider.LazySessionManager.<>c__DisplayClass1.<StartSession>b__0()
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.LazyInitValue()
   at System.Lazy`1.get_Value()
   at Amdaris.NHibernateProvider.LazySessionContext.CurrentSession()
   at NHibernate.Impl.SessionFactoryImpl.GetCurrentSession()
   at CEC.SRV.BLL.Repositories.SrvRepository.get_Session() in D:\work\CEC\CEC.SRV\src\CEC.SRV.BLL\Repositories\SrvRepository.cs:line 64
   at Amdaris.NHibernateProvider.Repository.Query[T]()
   at CEC.SRV.BLL.Impl.NotificationBll.CountUnReadNotifications() in D:\work\CEC\CEC.SRV\src\CEC.SRV.BLL\Impl\NotificationBll.cs:line 39
   at CEC.Web.SRV.Controllers.NotificationController.GetCountNotification() in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\Controllers\NotificationController.cs:line 57
   at lambda_method(Closure , ControllerBase , Object[] )
   at System.Web.Mvc.ActionMethodDispatcher.Execute(ControllerBase controller, Object[] parameters)
   at System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   at System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<BeginInvokeSynchronousActionMethod>b__39(IAsyncResult asyncResult, ActionInvocation innerInvokeState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`2.CallEndDelegate(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
2018-05-16 11:49:03.6484 ERROR CEC.Web.SRV.Infrastructure.HandleAndLogErrorAttribute.OnException  NHibernate.TransactionException: Begin failed with SQL exception ---> System.Data.SqlClient.SqlException: Connection Timeout Expired.  The timeout period elapsed while attempting to consume the pre-login handshake acknowledgement.  This could be because the pre-login handshake failed or the server was unable to respond back in time.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=15378; handshake=1664;  ---> System.ComponentModel.Win32Exception: The wait operation timed out
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, DbConnectionPool pool, String accessToken, Boolean applyTransientFaultHandling, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at NHibernate.Connection.DriverConnectionProvider.GetConnection()
   at NHibernate.AdoNet.ConnectionManager.GetConnection()
   at NHibernate.Impl.SessionImpl.get_Connection()
   at NHibernate.Transaction.AdoTransaction.Begin(IsolationLevel isolationLevel)
   --- End of inner exception stack trace ---
   at NHibernate.Transaction.AdoTransaction.Begin(IsolationLevel isolationLevel)
   at NHibernate.Transaction.AdoTransaction.Begin()
   at NHibernate.Impl.SessionImpl.BeginTransaction()
   at Amdaris.NHibernateProvider.LazySessionManager.<>c__DisplayClass1.<StartSession>b__0()
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.LazyInitValue()
   at System.Lazy`1.get_Value()
   at Amdaris.NHibernateProvider.LazySessionContext.CurrentSession()
   at NHibernate.Impl.SessionFactoryImpl.GetCurrentSession()
   at CEC.SRV.BLL.Repositories.SrvRepository.get_Session() in D:\work\CEC\CEC.SRV\src\CEC.SRV.BLL\Repositories\SrvRepository.cs:line 64
   at Amdaris.NHibernateProvider.Repository.Query[T]()
   at CEC.SRV.BLL.Impl.NotificationBll.CountUnReadNotifications() in D:\work\CEC\CEC.SRV\src\CEC.SRV.BLL\Impl\NotificationBll.cs:line 39
   at CEC.Web.SRV.Controllers.NotificationController.GetCountNotification() in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\Controllers\NotificationController.cs:line 57
   at lambda_method(Closure , ControllerBase , Object[] )
   at System.Web.Mvc.ActionMethodDispatcher.Execute(ControllerBase controller, Object[] parameters)
   at System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   at System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<BeginInvokeSynchronousActionMethod>b__39(IAsyncResult asyncResult, ActionInvocation innerInvokeState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`2.CallEndDelegate(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
2018-05-16 11:49:04.2710 ERROR CEC.Web.SRV.Infrastructure.HandleAndLogErrorAttribute.OnException  NHibernate.TransactionException: Begin failed with SQL exception ---> System.Data.SqlClient.SqlException: Connection Timeout Expired.  The timeout period elapsed while attempting to consume the pre-login handshake acknowledgement.  This could be because the pre-login handshake failed or the server was unable to respond back in time.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=15378; handshake=1664;  ---> System.ComponentModel.Win32Exception: The wait operation timed out
   --- End of inner exception stack trace ---
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at NHibernate.Connection.DriverConnectionProvider.GetConnection()
   at NHibernate.AdoNet.ConnectionManager.GetConnection()
   at NHibernate.Impl.SessionImpl.get_Connection()
   at NHibernate.Transaction.AdoTransaction.Begin(IsolationLevel isolationLevel)
   --- End of inner exception stack trace ---
   at NHibernate.Transaction.AdoTransaction.Begin(IsolationLevel isolationLevel)
   at NHibernate.Transaction.AdoTransaction.Begin()
   at NHibernate.Impl.SessionImpl.BeginTransaction()
   at Amdaris.NHibernateProvider.LazySessionManager.<>c__DisplayClass1.<StartSession>b__0()
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.LazyInitValue()
   at System.Lazy`1.get_Value()
   at Amdaris.NHibernateProvider.LazySessionContext.CurrentSession()
   at NHibernate.Impl.SessionFactoryImpl.GetCurrentSession()
   at CEC.SRV.BLL.Repositories.SrvRepository.get_Session() in D:\work\CEC\CEC.SRV\src\CEC.SRV.BLL\Repositories\SrvRepository.cs:line 64
   at Amdaris.NHibernateProvider.Repository.Query[T]()
   at CEC.SRV.BLL.Impl.NotificationBll.CountUnReadNotifications() in D:\work\CEC\CEC.SRV\src\CEC.SRV.BLL\Impl\NotificationBll.cs:line 39
   at CEC.Web.SRV.Controllers.NotificationController.GetCountNotification() in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\Controllers\NotificationController.cs:line 57
   at lambda_method(Closure , ControllerBase , Object[] )
   at System.Web.Mvc.ActionMethodDispatcher.Execute(ControllerBase controller, Object[] parameters)
   at System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   at System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<BeginInvokeSynchronousActionMethod>b__39(IAsyncResult asyncResult, ActionInvocation innerInvokeState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`2.CallEndDelegate(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3d()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.AsyncInvocationWithFilters.<>c__DisplayClass46.<InvokeActionMethodFilterAsynchronouslyRecursive>b__3f()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass33.<BeginInvokeActionMethodWithFilters>b__32(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.End()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
2018-05-16 12:09:39.3901 ERROR CEC.Web.SRV.EDayExport.ExportStageExecuter.WriteLog Unhandled exception occured: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] NHibernate.Exceptions.GenericADOException: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] ---> System.Data.SqlClient.SqlException: The INSERT statement conflicted with the FOREIGN KEY constraint "FK_AssignedVoter_Village". The conflict occurred in database "SAISE.ElectionDay20171119", table "dbo.Village", column 'VillageId'.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   --- End of inner exception stack trace ---
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   at NHibernate.Impl.StatelessSessionImpl.ExecuteNativeUpdate(NativeSQLQuerySpecification nativeSQLQuerySpecification, QueryParameters queryParameters)
   at NHibernate.Impl.SqlQueryImpl.ExecuteUpdate()
   at CEC.Web.SRV.EDayExport.SaiseRepository.AssignVoterToElection(Int64 saiseElectionId) in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\SaiseRepository.cs:line 276
   at CEC.Web.SRV.EDayExport.VoterExporter.ExecuteStateInternal() in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\VoterExporter.cs:line 104
2018-05-16 12:50:37.6990 ERROR CEC.Web.SRV.EDayExport.ExportStageExecuter.WriteLog Unhandled exception occured: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] NHibernate.Exceptions.GenericADOException: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] ---> System.Data.SqlClient.SqlException: The INSERT statement conflicted with the FOREIGN KEY constraint "FK_AssignedVoter_Village". The conflict occurred in database "SAISE.ElectionDay20171119", table "dbo.Village", column 'VillageId'.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   --- End of inner exception stack trace ---
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   at NHibernate.Impl.StatelessSessionImpl.ExecuteNativeUpdate(NativeSQLQuerySpecification nativeSQLQuerySpecification, QueryParameters queryParameters)
   at NHibernate.Impl.SqlQueryImpl.ExecuteUpdate()
   at CEC.Web.SRV.EDayExport.SaiseRepository.AssignVoterToElection(Int64 saiseElectionId) in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\SaiseRepository.cs:line 276
   at CEC.Web.SRV.EDayExport.VoterExporter.ExecuteStateInternal() in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\VoterExporter.cs:line 104
2018-05-16 12:58:08.0789 ERROR CEC.Web.SRV.Infrastructure.HandleAndLogErrorAttribute.OnException  System.Web.Mvc.HttpAntiForgeryException (0x80004005): The provided anti-forgery token was meant for a different claims-based user than the current user.
   at System.Web.Helpers.AntiXsrf.TokenValidator.ValidateTokens(HttpContextBase httpContext, IIdentity identity, AntiForgeryToken sessionToken, AntiForgeryToken fieldToken)
   at System.Web.Helpers.AntiXsrf.AntiForgeryWorker.Validate(HttpContextBase httpContext)
   at System.Web.Helpers.AntiForgery.Validate()
   at System.Web.Mvc.ValidateAntiForgeryTokenAttribute.OnAuthorization(AuthorizationContext filterContext)
   at System.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__19(AsyncCallback asyncCallback, Object asyncState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallBeginDelegate(AsyncCallback callback, Object callbackState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.Begin(AsyncCallback callback, Object state, Int32 timeout)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeAction(ControllerContext controllerContext, String actionName, AsyncCallback callback, Object state)
   at System.Web.Mvc.Controller.<BeginExecuteCore>b__1c(AsyncCallback asyncCallback, Object asyncState, ExecuteCoreState innerState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncVoid`1.CallBeginDelegate(AsyncCallback callback, Object callbackState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.Begin(AsyncCallback callback, Object state, Int32 timeout)
   at System.Web.Mvc.Controller.BeginExecuteCore(AsyncCallback callback, Object state)
   at CEC.Web.SRV.Controllers.BaseController.BeginExecuteCore(AsyncCallback callback, Object state) in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\Controllers\BaseController.cs:line 44
   at System.Web.Mvc.Controller.<BeginExecute>b__14(AsyncCallback asyncCallback, Object callbackState, Controller controller)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncVoid`1.CallBeginDelegate(AsyncCallback callback, Object callbackState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.Begin(AsyncCallback callback, Object state, Int32 timeout)
   at System.Web.Mvc.Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)
   at System.Web.Mvc.Controller.System.Web.Mvc.Async.IAsyncController.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)
   at System.Web.Mvc.MvcHandler.<BeginProcessRequest>b__4(AsyncCallback asyncCallback, Object asyncState, ProcessRequestState innerState)
2018-05-16 12:58:28.5621 ERROR CEC.Web.SRV.MvcApplication.Application_Error  System.Web.Mvc.HttpAntiForgeryException (0x80004005): The provided anti-forgery token was meant for a different claims-based user than the current user.
   at System.Web.Helpers.AntiXsrf.TokenValidator.ValidateTokens(HttpContextBase httpContext, IIdentity identity, AntiForgeryToken sessionToken, AntiForgeryToken fieldToken)
   at System.Web.Helpers.AntiXsrf.AntiForgeryWorker.Validate(HttpContextBase httpContext)
   at System.Web.Helpers.AntiForgery.Validate()
   at System.Web.Mvc.ValidateAntiForgeryTokenAttribute.OnAuthorization(AuthorizationContext filterContext)
   at System.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__19(AsyncCallback asyncCallback, Object asyncState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResult`1.CallBeginDelegate(AsyncCallback callback, Object callbackState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.Begin(AsyncCallback callback, Object state, Int32 timeout)
   at System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeAction(ControllerContext controllerContext, String actionName, AsyncCallback callback, Object state)
   at System.Web.Mvc.Controller.<BeginExecuteCore>b__1c(AsyncCallback asyncCallback, Object asyncState, ExecuteCoreState innerState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncVoid`1.CallBeginDelegate(AsyncCallback callback, Object callbackState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.Begin(AsyncCallback callback, Object state, Int32 timeout)
   at System.Web.Mvc.Controller.BeginExecuteCore(AsyncCallback callback, Object state)
   at CEC.Web.SRV.Controllers.BaseController.BeginExecuteCore(AsyncCallback callback, Object state) in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\Controllers\BaseController.cs:line 44
   at System.Web.Mvc.Controller.<BeginExecute>b__14(AsyncCallback asyncCallback, Object callbackState, Controller controller)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncVoid`1.CallBeginDelegate(AsyncCallback callback, Object callbackState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.Begin(AsyncCallback callback, Object state, Int32 timeout)
   at System.Web.Mvc.Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)
   at System.Web.Mvc.Controller.System.Web.Mvc.Async.IAsyncController.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)
   at System.Web.Mvc.MvcHandler.<BeginProcessRequest>b__4(AsyncCallback asyncCallback, Object asyncState, ProcessRequestState innerState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncVoid`1.CallBeginDelegate(AsyncCallback callback, Object callbackState)
   at System.Web.Mvc.Async.AsyncResultWrapper.WrappedAsyncResultBase`1.Begin(AsyncCallback callback, Object state, Int32 timeout)
   at System.Web.Mvc.MvcHandler.BeginProcessRequest(HttpContextBase httpContext, AsyncCallback callback, Object state)
   at System.Web.Mvc.MvcHandler.BeginProcessRequest(HttpContext httpContext, AsyncCallback callback, Object state)
   at System.Web.Mvc.MvcHandler.System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext context, AsyncCallback cb, Object extraData)
   at System.Web.HttpApplication.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()
   at System.Web.HttpApplication.ExecuteStepImpl(IExecutionStep step)
   at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously)
2018-05-16 14:34:42.3342 ERROR CEC.Web.SRV.EDayExport.ExportStageExecuter.WriteLog Unhandled exception occured: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] NHibernate.Exceptions.GenericADOException: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] ---> System.Data.SqlClient.SqlException: The INSERT statement conflicted with the FOREIGN KEY constraint "FK_AssignedVoter_Village". The conflict occurred in database "SAISE.ElectionDay20171119", table "dbo.Village", column 'VillageId'.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   --- End of inner exception stack trace ---
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   at NHibernate.Impl.StatelessSessionImpl.ExecuteNativeUpdate(NativeSQLQuerySpecification nativeSQLQuerySpecification, QueryParameters queryParameters)
   at NHibernate.Impl.SqlQueryImpl.ExecuteUpdate()
   at CEC.Web.SRV.EDayExport.SaiseRepository.AssignVoterToElection(Int64 saiseElectionId) in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\SaiseRepository.cs:line 276
   at CEC.Web.SRV.EDayExport.VoterExporter.ExecuteStateInternal() in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\VoterExporter.cs:line 104
2018-05-16 14:41:59.2056 ERROR CEC.Web.SRV.EDayExport.ExportStageExecuter.WriteLog Unhandled exception occured: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] NHibernate.Exceptions.GenericADOException: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] ---> System.Data.SqlClient.SqlException: The INSERT statement conflicted with the FOREIGN KEY constraint "FK_AssignedVoter_Village". The conflict occurred in database "SAISE.ElectionDay20171119", table "dbo.Village", column 'VillageId'.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   --- End of inner exception stack trace ---
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   at NHibernate.Impl.StatelessSessionImpl.ExecuteNativeUpdate(NativeSQLQuerySpecification nativeSQLQuerySpecification, QueryParameters queryParameters)
   at NHibernate.Impl.SqlQueryImpl.ExecuteUpdate()
   at CEC.Web.SRV.EDayExport.SaiseRepository.AssignVoterToElection(Int64 saiseElectionId) in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\SaiseRepository.cs:line 276
   at CEC.Web.SRV.EDayExport.VoterExporter.ExecuteStateInternal() in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\VoterExporter.cs:line 104
2018-05-16 15:04:15.6327 ERROR CEC.Web.SRV.EDayExport.ExportStageExecuter.WriteLog Unhandled exception occured: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] NHibernate.Exceptions.GenericADOException: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] ---> System.Data.SqlClient.SqlException: The INSERT statement conflicted with the FOREIGN KEY constraint "FK_AssignedVoter_Village". The conflict occurred in database "SAISE.ElectionDay20171119", table "dbo.Village", column 'VillageId'.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   --- End of inner exception stack trace ---
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   at NHibernate.Impl.StatelessSessionImpl.ExecuteNativeUpdate(NativeSQLQuerySpecification nativeSQLQuerySpecification, QueryParameters queryParameters)
   at NHibernate.Impl.SqlQueryImpl.ExecuteUpdate()
   at CEC.Web.SRV.EDayExport.SaiseRepository.AssignVoterToElection(Int64 saiseElectionId) in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\SaiseRepository.cs:line 276
   at CEC.Web.SRV.EDayExport.VoterExporter.ExecuteStateInternal() in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\VoterExporter.cs:line 104
2018-05-16 15:05:57.9868 ERROR CEC.Web.SRV.EDayExport.ExportStageExecuter.WriteLog Unhandled exception occured: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] NHibernate.Exceptions.GenericADOException: could not execute native bulk manipulation query:
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = :electionId

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT :electionId, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = :electionId
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                [SQL: 
                
                        UPDATE av SET
                        av.RequestingPollingStationId = t.pollingStationId,
                        av.PollingStationId = t.pollingStationId,
                        av.RequestingVillageId = ISNULL(t.regionId, -1),
                        av.VillageId = ISNULL(t.regionId, -1),
                        av.RopVillageId = ISNULL(t.regionId, -1),
                        av.Category = -1,
                        av.EditUserId = 1,
                        av.EditDate = GETDATE(),
                        av.Version = ISNULL(av.Version, 0) + 1
                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        INNER JOIN AssignedVoter av on av.VoterId = v.VoterId
                        WHERE 
                        t.pollingStationId is not null and v.Status = 1000
                        and av.ElectionId = @p0

                        INSERT INTO AssignedVoter (ElectionId, RequestingVillageId, VillageId, RopVillageId, RequestingPollingStationId, PollingStationId,
                        VoterId, Category, Status, EditUserId, EditDate, Version)

                        SELECT @p1, ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), ISNULL(t.regionId, -1), t.pollingStationId, t.pollingStationId, v.VoterId, -1, v.Status, 1, GetDate(), 1

                        FROM VoterSRV t
                        INNER JOIN Voter v on t.idnp = v.idnp
                        LEFT JOIN AssignedVoter av on av.VoterId = v.VoterId and av.ElectionId = @p2
                        WHERE av.AssignedVoterId IS NULL
                        and t.pollingStationId is not null and v.Status = 1000

                ] ---> System.Data.SqlClient.SqlException: The INSERT statement conflicted with the FOREIGN KEY constraint "FK_AssignedVoter_Village". The conflict occurred in database "SAISE.ElectionDay20171119", table "dbo.Village", column 'VillageId'.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   --- End of inner exception stack trace ---
   at NHibernate.Engine.Query.NativeSQLQueryPlan.PerformExecuteUpdate(QueryParameters queryParameters, ISessionImplementor session)
   at NHibernate.Impl.StatelessSessionImpl.ExecuteNativeUpdate(NativeSQLQuerySpecification nativeSQLQuerySpecification, QueryParameters queryParameters)
   at NHibernate.Impl.SqlQueryImpl.ExecuteUpdate()
   at CEC.Web.SRV.EDayExport.SaiseRepository.AssignVoterToElection(Int64 saiseElectionId) in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\SaiseRepository.cs:line 276
   at CEC.Web.SRV.EDayExport.VoterExporter.ExecuteStateInternal() in D:\work\CEC\CEC.SRV\src\CEC.Web.SRV\EDayExport\VoterExporter.cs:line 109
