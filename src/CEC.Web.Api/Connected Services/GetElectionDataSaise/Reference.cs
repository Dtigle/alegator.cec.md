//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CEC.Web.Api.GetElectionDataSaise {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageRequest", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CEC.Web.Api.GetElectionDataSaise.ElectionCircumscriptionsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CEC.Web.Api.GetElectionDataSaise.ElectionPollingStationsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CEC.Web.Api.GetElectionDataSaise.ElectionMembersRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CEC.Web.Api.GetElectionDataSaise.ElectionObserversRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CEC.Web.Api.GetElectionDataSaise.ElectionsRequest))]
    public partial class PageRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionCircumscriptionsRequest", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionCircumscriptionsRequest : CEC.Web.Api.GetElectionDataSaise.PageRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ElectionRoundIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpandPollingStationsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ElectionRoundId {
            get {
                return this.ElectionRoundIdField;
            }
            set {
                if ((this.ElectionRoundIdField.Equals(value) != true)) {
                    this.ElectionRoundIdField = value;
                    this.RaisePropertyChanged("ElectionRoundId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExpandPollingStations {
            get {
                return this.ExpandPollingStationsField;
            }
            set {
                if ((this.ExpandPollingStationsField.Equals(value) != true)) {
                    this.ExpandPollingStationsField = value;
                    this.RaisePropertyChanged("ExpandPollingStations");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionPollingStationsRequest", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionPollingStationsRequest : CEC.Web.Api.GetElectionDataSaise.PageRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<long> ElectionCircumscriptionsIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<long> ElectionCircumscriptionsId {
            get {
                return this.ElectionCircumscriptionsIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectionCircumscriptionsIdField, value) != true)) {
                    this.ElectionCircumscriptionsIdField = value;
                    this.RaisePropertyChanged("ElectionCircumscriptionsId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionMembersRequest", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionMembersRequest : CEC.Web.Api.GetElectionDataSaise.PageRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ElectionRoundIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ElectionRoundId {
            get {
                return this.ElectionRoundIdField;
            }
            set {
                if ((this.ElectionRoundIdField.Equals(value) != true)) {
                    this.ElectionRoundIdField = value;
                    this.RaisePropertyChanged("ElectionRoundId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionObserversRequest", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionObserversRequest : CEC.Web.Api.GetElectionDataSaise.PageRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ElectionRoundIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ElectionRoundId {
            get {
                return this.ElectionRoundIdField;
            }
            set {
                if ((this.ElectionRoundIdField.Equals(value) != true)) {
                    this.ElectionRoundIdField = value;
                    this.RaisePropertyChanged("ElectionRoundId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionsRequest", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionsRequest : CEC.Web.Api.GetElectionDataSaise.PageRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionStatus> StatusesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionStatus> Statuses {
            get {
                return this.StatusesField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusesField, value) != true)) {
                    this.StatusesField = value;
                    this.RaisePropertyChanged("Statuses");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionStatus", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.Domain.election")]
    public enum ElectionStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Finished = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionsResponse", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.Election> ElectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionType> ElectionTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.Election> Elections {
            get {
                return this.ElectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectionsField, value) != true)) {
                    this.ElectionsField = value;
                    this.RaisePropertyChanged("Elections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionType> ElectionTypes {
            get {
                return this.ElectionTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.ElectionTypesField, value) != true)) {
                    this.ElectionTypesField = value;
                    this.RaisePropertyChanged("ElectionTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Election", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class Election : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ElectionTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ElectionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CEC.Web.Api.GetElectionDataSaise.ElectionStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public long ElectionTypeId {
            get {
                return this.ElectionTypeIdField;
            }
            set {
                if ((this.ElectionTypeIdField.Equals(value) != true)) {
                    this.ElectionTypeIdField = value;
                    this.RaisePropertyChanged("ElectionTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime ElectionDate {
            get {
                return this.ElectionDateField;
            }
            set {
                if ((this.ElectionDateField.Equals(value) != true)) {
                    this.ElectionDateField = value;
                    this.RaisePropertyChanged("ElectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public CEC.Web.Api.GetElectionDataSaise.ElectionStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionType", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CEC.Web.Api.GetElectionDataSaise.ElectionCompetitorType CompetitorTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public CEC.Web.Api.GetElectionDataSaise.ElectionCompetitorType CompetitorType {
            get {
                return this.CompetitorTypeField;
            }
            set {
                if ((this.CompetitorTypeField.Equals(value) != true)) {
                    this.CompetitorTypeField = value;
                    this.RaisePropertyChanged("CompetitorType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionCompetitorType", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.Domain.election")]
    public enum ElectionCompetitorType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Candidate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PoliticalParty = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Question = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionRound", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionRound : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ElectionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CEC.Web.Api.GetElectionDataSaise.ElectionRoundStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime ElectionDate {
            get {
                return this.ElectionDateField;
            }
            set {
                if ((this.ElectionDateField.Equals(value) != true)) {
                    this.ElectionDateField = value;
                    this.RaisePropertyChanged("ElectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public CEC.Web.Api.GetElectionDataSaise.ElectionRoundStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionRoundStatus", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.Domain.election")]
    public enum ElectionRoundStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aproved = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithResults = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Validated = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionCircumscriptionsResponse", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionCircumscriptionsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionCircumscription> ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionCircumscription> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionCircumscription", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionCircumscription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameRoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameRuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionPollingStation> PollingStationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string NameRo {
            get {
                return this.NameRoField;
            }
            set {
                if ((object.ReferenceEquals(this.NameRoField, value) != true)) {
                    this.NameRoField = value;
                    this.RaisePropertyChanged("NameRo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string NameRu {
            get {
                return this.NameRuField;
            }
            set {
                if ((object.ReferenceEquals(this.NameRuField, value) != true)) {
                    this.NameRuField = value;
                    this.RaisePropertyChanged("NameRu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionPollingStation> PollingStations {
            get {
                return this.PollingStationsField;
            }
            set {
                if ((object.ReferenceEquals(this.PollingStationsField, value) != true)) {
                    this.PollingStationsField = value;
                    this.RaisePropertyChanged("PollingStations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionPollingStation", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionPollingStation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PollingStationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ElectionRoundIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CircumscriptionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberPerElectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public long PollingStationId {
            get {
                return this.PollingStationIdField;
            }
            set {
                if ((this.PollingStationIdField.Equals(value) != true)) {
                    this.PollingStationIdField = value;
                    this.RaisePropertyChanged("PollingStationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public long ElectionRoundId {
            get {
                return this.ElectionRoundIdField;
            }
            set {
                if ((this.ElectionRoundIdField.Equals(value) != true)) {
                    this.ElectionRoundIdField = value;
                    this.RaisePropertyChanged("ElectionRoundId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long CircumscriptionId {
            get {
                return this.CircumscriptionIdField;
            }
            set {
                if ((this.CircumscriptionIdField.Equals(value) != true)) {
                    this.CircumscriptionIdField = value;
                    this.RaisePropertyChanged("CircumscriptionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string ContactInfo {
            get {
                return this.ContactInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactInfoField, value) != true)) {
                    this.ContactInfoField = value;
                    this.RaisePropertyChanged("ContactInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string NumberPerElection {
            get {
                return this.NumberPerElectionField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberPerElectionField, value) != true)) {
                    this.NumberPerElectionField = value;
                    this.RaisePropertyChanged("NumberPerElection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionPollingStationsResponse", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionPollingStationsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionPollingStation> ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionPollingStation> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionRegions", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionRegions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CEC.Web.Api.GetElectionDataSaise.Region RootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.RegionType> RegionTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CEC.Web.Api.GetElectionDataSaise.Region Root {
            get {
                return this.RootField;
            }
            set {
                if ((object.ReferenceEquals(this.RootField, value) != true)) {
                    this.RootField = value;
                    this.RaisePropertyChanged("Root");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.RegionType> RegionTypes {
            get {
                return this.RegionTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionTypesField, value) != true)) {
                    this.RegionTypesField = value;
                    this.RaisePropertyChanged("RegionTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Region", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class Region : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameRoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameRuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RegionTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.Region> ChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> StatisticCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameRo {
            get {
                return this.NameRoField;
            }
            set {
                if ((object.ReferenceEquals(this.NameRoField, value) != true)) {
                    this.NameRoField = value;
                    this.RaisePropertyChanged("NameRo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameRu {
            get {
                return this.NameRuField;
            }
            set {
                if ((object.ReferenceEquals(this.NameRuField, value) != true)) {
                    this.NameRuField = value;
                    this.RaisePropertyChanged("NameRu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RegionTypeId {
            get {
                return this.RegionTypeIdField;
            }
            set {
                if ((this.RegionTypeIdField.Equals(value) != true)) {
                    this.RegionTypeIdField = value;
                    this.RaisePropertyChanged("RegionTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.Region> Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<long> StatisticCode {
            get {
                return this.StatisticCodeField;
            }
            set {
                if ((this.StatisticCodeField.Equals(value) != true)) {
                    this.StatisticCodeField = value;
                    this.RaisePropertyChanged("StatisticCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionType", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class RegionType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionCompetitorsRequest", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionCompetitorsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ElectionCircumscriptionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ElectionRoundIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ElectionCircumscriptionId {
            get {
                return this.ElectionCircumscriptionIdField;
            }
            set {
                if ((this.ElectionCircumscriptionIdField.Equals(value) != true)) {
                    this.ElectionCircumscriptionIdField = value;
                    this.RaisePropertyChanged("ElectionCircumscriptionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ElectionRoundId {
            get {
                return this.ElectionRoundIdField;
            }
            set {
                if ((this.ElectionRoundIdField.Equals(value) != true)) {
                    this.ElectionRoundIdField = value;
                    this.RaisePropertyChanged("ElectionRoundId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionCompetitors", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionCompetitors : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionCompetitor> CompetitorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.PoliticalParty> PoliticalPartiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionCompetitor> Competitors {
            get {
                return this.CompetitorsField;
            }
            set {
                if ((object.ReferenceEquals(this.CompetitorsField, value) != true)) {
                    this.CompetitorsField = value;
                    this.RaisePropertyChanged("Competitors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.PoliticalParty> PoliticalParties {
            get {
                return this.PoliticalPartiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PoliticalPartiesField, value) != true)) {
                    this.PoliticalPartiesField = value;
                    this.RaisePropertyChanged("PoliticalParties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionCompetitor", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionCompetitor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ElectionCircumscriptionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CEC.Web.Api.GetElectionDataSaise.ElectionCompetitorType CompetitorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PoliticalPartyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsIndependentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CEC.Web.Api.GetElectionDataSaise.ReferendumQuestion ReferendumQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionCompetitorMember> CompetitorMembersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<long> ElectionCircumscriptionId {
            get {
                return this.ElectionCircumscriptionIdField;
            }
            set {
                if ((this.ElectionCircumscriptionIdField.Equals(value) != true)) {
                    this.ElectionCircumscriptionIdField = value;
                    this.RaisePropertyChanged("ElectionCircumscriptionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public CEC.Web.Api.GetElectionDataSaise.ElectionCompetitorType CompetitorType {
            get {
                return this.CompetitorTypeField;
            }
            set {
                if ((this.CompetitorTypeField.Equals(value) != true)) {
                    this.CompetitorTypeField = value;
                    this.RaisePropertyChanged("CompetitorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<long> PoliticalPartyId {
            get {
                return this.PoliticalPartyIdField;
            }
            set {
                if ((this.PoliticalPartyIdField.Equals(value) != true)) {
                    this.PoliticalPartyIdField = value;
                    this.RaisePropertyChanged("PoliticalPartyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool IsIndependent {
            get {
                return this.IsIndependentField;
            }
            set {
                if ((this.IsIndependentField.Equals(value) != true)) {
                    this.IsIndependentField = value;
                    this.RaisePropertyChanged("IsIndependent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public CEC.Web.Api.GetElectionDataSaise.ReferendumQuestion ReferendumQuestion {
            get {
                return this.ReferendumQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferendumQuestionField, value) != true)) {
                    this.ReferendumQuestionField = value;
                    this.RaisePropertyChanged("ReferendumQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionCompetitorMember> CompetitorMembers {
            get {
                return this.CompetitorMembersField;
            }
            set {
                if ((object.ReferenceEquals(this.CompetitorMembersField, value) != true)) {
                    this.CompetitorMembersField = value;
                    this.RaisePropertyChanged("CompetitorMembers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PoliticalParty", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class PoliticalParty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameRoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameRuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] LogoColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] LogoBlackWhiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string NameRo {
            get {
                return this.NameRoField;
            }
            set {
                if ((object.ReferenceEquals(this.NameRoField, value) != true)) {
                    this.NameRoField = value;
                    this.RaisePropertyChanged("NameRo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string NameRu {
            get {
                return this.NameRuField;
            }
            set {
                if ((object.ReferenceEquals(this.NameRuField, value) != true)) {
                    this.NameRuField = value;
                    this.RaisePropertyChanged("NameRu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public byte[] LogoColor {
            get {
                return this.LogoColorField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoColorField, value) != true)) {
                    this.LogoColorField = value;
                    this.RaisePropertyChanged("LogoColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public byte[] LogoBlackWhite {
            get {
                return this.LogoBlackWhiteField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoBlackWhiteField, value) != true)) {
                    this.LogoBlackWhiteField = value;
                    this.RaisePropertyChanged("LogoBlackWhite");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReferendumQuestion", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ReferendumQuestion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionRoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionRuField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionRo {
            get {
                return this.QuestionRoField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionRoField, value) != true)) {
                    this.QuestionRoField = value;
                    this.RaisePropertyChanged("QuestionRo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionRu {
            get {
                return this.QuestionRuField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionRuField, value) != true)) {
                    this.QuestionRuField = value;
                    this.RaisePropertyChanged("QuestionRu");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionCompetitorMember", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionCompetitorMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdnpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CEC.Web.Api.GetElectionDataSaise.GenderEnum GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameRoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameRuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameRoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameRuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OccupationRuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OccupationRoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkplaceRuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkplaceRoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] LogoColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] LogoBlackWhiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Idnp {
            get {
                return this.IdnpField;
            }
            set {
                if ((object.ReferenceEquals(this.IdnpField, value) != true)) {
                    this.IdnpField = value;
                    this.RaisePropertyChanged("Idnp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public CEC.Web.Api.GetElectionDataSaise.GenderEnum Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string FirstNameRo {
            get {
                return this.FirstNameRoField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameRoField, value) != true)) {
                    this.FirstNameRoField = value;
                    this.RaisePropertyChanged("FirstNameRo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string FirstNameRu {
            get {
                return this.FirstNameRuField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameRuField, value) != true)) {
                    this.FirstNameRuField = value;
                    this.RaisePropertyChanged("FirstNameRu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string LastNameRo {
            get {
                return this.LastNameRoField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameRoField, value) != true)) {
                    this.LastNameRoField = value;
                    this.RaisePropertyChanged("LastNameRo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string LastNameRu {
            get {
                return this.LastNameRuField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameRuField, value) != true)) {
                    this.LastNameRuField = value;
                    this.RaisePropertyChanged("LastNameRu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string OccupationRu {
            get {
                return this.OccupationRuField;
            }
            set {
                if ((object.ReferenceEquals(this.OccupationRuField, value) != true)) {
                    this.OccupationRuField = value;
                    this.RaisePropertyChanged("OccupationRu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string OccupationRo {
            get {
                return this.OccupationRoField;
            }
            set {
                if ((object.ReferenceEquals(this.OccupationRoField, value) != true)) {
                    this.OccupationRoField = value;
                    this.RaisePropertyChanged("OccupationRo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string WorkplaceRu {
            get {
                return this.WorkplaceRuField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkplaceRuField, value) != true)) {
                    this.WorkplaceRuField = value;
                    this.RaisePropertyChanged("WorkplaceRu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string WorkplaceRo {
            get {
                return this.WorkplaceRoField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkplaceRoField, value) != true)) {
                    this.WorkplaceRoField = value;
                    this.RaisePropertyChanged("WorkplaceRo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public byte[] LogoColor {
            get {
                return this.LogoColorField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoColorField, value) != true)) {
                    this.LogoColorField = value;
                    this.RaisePropertyChanged("LogoColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public byte[] LogoBlackWhite {
            get {
                return this.LogoBlackWhiteField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoBlackWhiteField, value) != true)) {
                    this.LogoBlackWhiteField = value;
                    this.RaisePropertyChanged("LogoBlackWhite");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenderEnum", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.Domain.Lookup")]
    public enum GenderEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Necunoscut = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Masculin = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Feminin = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionMembers", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionMembers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionMember> ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionMember> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionMember", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdnpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ElectionPollingStationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CEC.Web.Api.GetElectionDataSaise.ElectionMemberRole RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BadgeNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Idnp {
            get {
                return this.IdnpField;
            }
            set {
                if ((object.ReferenceEquals(this.IdnpField, value) != true)) {
                    this.IdnpField = value;
                    this.RaisePropertyChanged("Idnp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public long ElectionPollingStationId {
            get {
                return this.ElectionPollingStationIdField;
            }
            set {
                if ((this.ElectionPollingStationIdField.Equals(value) != true)) {
                    this.ElectionPollingStationIdField = value;
                    this.RaisePropertyChanged("ElectionPollingStationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public CEC.Web.Api.GetElectionDataSaise.ElectionMemberRole Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string BadgeNumber {
            get {
                return this.BadgeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BadgeNumberField, value) != true)) {
                    this.BadgeNumberField = value;
                    this.RaisePropertyChanged("BadgeNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionMemberRole", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.Domain.election")]
    public enum ElectionMemberRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chairman = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Substitute = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionObservers", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionObservers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionObserver> ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionObserver> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionObserver", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionObserver : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdnpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CEC.Web.Api.GetElectionDataSaise.ElectionObserverAccreditation AccreditationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccreditationNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Idnp {
            get {
                return this.IdnpField;
            }
            set {
                if ((object.ReferenceEquals(this.IdnpField, value) != true)) {
                    this.IdnpField = value;
                    this.RaisePropertyChanged("Idnp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public CEC.Web.Api.GetElectionDataSaise.ElectionObserverAccreditation Accreditation {
            get {
                return this.AccreditationField;
            }
            set {
                if ((this.AccreditationField.Equals(value) != true)) {
                    this.AccreditationField = value;
                    this.RaisePropertyChanged("Accreditation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string AccreditationNumber {
            get {
                return this.AccreditationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccreditationNumberField, value) != true)) {
                    this.AccreditationNumberField = value;
                    this.RaisePropertyChanged("AccreditationNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionObserverAccreditation", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.Domain.election")]
    public enum ElectionObserverAccreditation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cec = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Circumscription = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionResult", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ElectionRoundIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionCompetitorResult> CompetitorResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ElectionRoundId {
            get {
                return this.ElectionRoundIdField;
            }
            set {
                if ((this.ElectionRoundIdField.Equals(value) != true)) {
                    this.ElectionRoundIdField = value;
                    this.RaisePropertyChanged("ElectionRoundId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionCompetitorResult> CompetitorResults {
            get {
                return this.CompetitorResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.CompetitorResultsField, value) != true)) {
                    this.CompetitorResultsField = value;
                    this.RaisePropertyChanged("CompetitorResults");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionCompetitorResult", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionCompetitorResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ElectionCompetitorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CEC.Web.Api.GetElectionDataSaise.CompetitorResult ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ElectionCompetitorId {
            get {
                return this.ElectionCompetitorIdField;
            }
            set {
                if ((this.ElectionCompetitorIdField.Equals(value) != true)) {
                    this.ElectionCompetitorIdField = value;
                    this.RaisePropertyChanged("ElectionCompetitorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CEC.Web.Api.GetElectionDataSaise.CompetitorResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompetitorResult", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    public enum CompetitorResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Loser = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Draw = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Winner = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectionCircumscriptionPollingStation", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class ElectionCircumscriptionPollingStation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameRoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameRuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PollingStationNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string NameRo {
            get {
                return this.NameRoField;
            }
            set {
                if ((object.ReferenceEquals(this.NameRoField, value) != true)) {
                    this.NameRoField = value;
                    this.RaisePropertyChanged("NameRo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string NameRu {
            get {
                return this.NameRuField;
            }
            set {
                if ((object.ReferenceEquals(this.NameRuField, value) != true)) {
                    this.NameRuField = value;
                    this.RaisePropertyChanged("NameRu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string PollingStationNumber {
            get {
                return this.PollingStationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PollingStationNumberField, value) != true)) {
                    this.PollingStationNumberField = value;
                    this.RaisePropertyChanged("PollingStationNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GetElectionDataSaise.IElectionsService")]
    public interface IElectionsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElections", ReplyAction="http://tempuri.org/IElectionsService/GetElectionsResponse")]
        CEC.Web.Api.GetElectionDataSaise.ElectionsResponse GetElections(CEC.Web.Api.GetElectionDataSaise.ElectionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElections", ReplyAction="http://tempuri.org/IElectionsService/GetElectionsResponse")]
        System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionsResponse> GetElectionsAsync(CEC.Web.Api.GetElectionDataSaise.ElectionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionRounds", ReplyAction="http://tempuri.org/IElectionsService/GetElectionRoundsResponse")]
        System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionRound> GetElectionRounds(long electionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionRounds", ReplyAction="http://tempuri.org/IElectionsService/GetElectionRoundsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionRound>> GetElectionRoundsAsync(long electionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionCircumscriptions", ReplyAction="http://tempuri.org/IElectionsService/GetElectionCircumscriptionsResponse")]
        CEC.Web.Api.GetElectionDataSaise.ElectionCircumscriptionsResponse GetElectionCircumscriptions(CEC.Web.Api.GetElectionDataSaise.ElectionCircumscriptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionCircumscriptions", ReplyAction="http://tempuri.org/IElectionsService/GetElectionCircumscriptionsResponse")]
        System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionCircumscriptionsResponse> GetElectionCircumscriptionsAsync(CEC.Web.Api.GetElectionDataSaise.ElectionCircumscriptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionPollingStations", ReplyAction="http://tempuri.org/IElectionsService/GetElectionPollingStationsResponse")]
        CEC.Web.Api.GetElectionDataSaise.ElectionPollingStationsResponse GetElectionPollingStations(CEC.Web.Api.GetElectionDataSaise.ElectionPollingStationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionPollingStations", ReplyAction="http://tempuri.org/IElectionsService/GetElectionPollingStationsResponse")]
        System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionPollingStationsResponse> GetElectionPollingStationsAsync(CEC.Web.Api.GetElectionDataSaise.ElectionPollingStationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionRegions", ReplyAction="http://tempuri.org/IElectionsService/GetElectionRegionsResponse")]
        CEC.Web.Api.GetElectionDataSaise.ElectionRegions GetElectionRegions(long electionRoundId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionRegions", ReplyAction="http://tempuri.org/IElectionsService/GetElectionRegionsResponse")]
        System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionRegions> GetElectionRegionsAsync(long electionRoundId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionCompetitors", ReplyAction="http://tempuri.org/IElectionsService/GetElectionCompetitorsResponse")]
        CEC.Web.Api.GetElectionDataSaise.ElectionCompetitors GetElectionCompetitors(CEC.Web.Api.GetElectionDataSaise.ElectionCompetitorsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionCompetitors", ReplyAction="http://tempuri.org/IElectionsService/GetElectionCompetitorsResponse")]
        System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionCompetitors> GetElectionCompetitorsAsync(CEC.Web.Api.GetElectionDataSaise.ElectionCompetitorsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionMembers", ReplyAction="http://tempuri.org/IElectionsService/GetElectionMembersResponse")]
        CEC.Web.Api.GetElectionDataSaise.ElectionMembers GetElectionMembers(CEC.Web.Api.GetElectionDataSaise.ElectionMembersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionMembers", ReplyAction="http://tempuri.org/IElectionsService/GetElectionMembersResponse")]
        System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionMembers> GetElectionMembersAsync(CEC.Web.Api.GetElectionDataSaise.ElectionMembersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionObservers", ReplyAction="http://tempuri.org/IElectionsService/GetElectionObserversResponse")]
        CEC.Web.Api.GetElectionDataSaise.ElectionObservers GetElectionObservers(CEC.Web.Api.GetElectionDataSaise.ElectionObserversRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionObservers", ReplyAction="http://tempuri.org/IElectionsService/GetElectionObserversResponse")]
        System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionObservers> GetElectionObserversAsync(CEC.Web.Api.GetElectionDataSaise.ElectionObserversRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/SetPollingStationAddress", ReplyAction="http://tempuri.org/IElectionsService/SetPollingStationAddressResponse")]
        void SetPollingStationAddress(long pollingStationId, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/SetPollingStationAddress", ReplyAction="http://tempuri.org/IElectionsService/SetPollingStationAddressResponse")]
        System.Threading.Tasks.Task SetPollingStationAddressAsync(long pollingStationId, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/SetElectionResults", ReplyAction="http://tempuri.org/IElectionsService/SetElectionResultsResponse")]
        void SetElectionResults(CEC.Web.Api.GetElectionDataSaise.ElectionResult electionResults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/SetElectionResults", ReplyAction="http://tempuri.org/IElectionsService/SetElectionResultsResponse")]
        System.Threading.Tasks.Task SetElectionResultsAsync(CEC.Web.Api.GetElectionDataSaise.ElectionResult electionResults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionCircumscriptionPollingStation", ReplyAction="http://tempuri.org/IElectionsService/GetElectionCircumscriptionPollingStationResp" +
            "onse")]
        CEC.Web.Api.GetElectionDataSaise.ElectionCircumscriptionPollingStation GetElectionCircumscriptionPollingStation(long pollingStationId, long electionRoundId, long electionCircumscriptionListId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectionsService/GetElectionCircumscriptionPollingStation", ReplyAction="http://tempuri.org/IElectionsService/GetElectionCircumscriptionPollingStationResp" +
            "onse")]
        System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionCircumscriptionPollingStation> GetElectionCircumscriptionPollingStationAsync(long pollingStationId, long electionRoundId, long electionCircumscriptionListId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IElectionsServiceChannel : CEC.Web.Api.GetElectionDataSaise.IElectionsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ElectionsServiceClient : System.ServiceModel.ClientBase<CEC.Web.Api.GetElectionDataSaise.IElectionsService>, CEC.Web.Api.GetElectionDataSaise.IElectionsService {
        
        public ElectionsServiceClient() {
        }
        
        public ElectionsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ElectionsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ElectionsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ElectionsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CEC.Web.Api.GetElectionDataSaise.ElectionsResponse GetElections(CEC.Web.Api.GetElectionDataSaise.ElectionsRequest request) {
            return base.Channel.GetElections(request);
        }
        
        public System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionsResponse> GetElectionsAsync(CEC.Web.Api.GetElectionDataSaise.ElectionsRequest request) {
            return base.Channel.GetElectionsAsync(request);
        }
        
        public System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionRound> GetElectionRounds(long electionId) {
            return base.Channel.GetElectionRounds(electionId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CEC.Web.Api.GetElectionDataSaise.ElectionRound>> GetElectionRoundsAsync(long electionId) {
            return base.Channel.GetElectionRoundsAsync(electionId);
        }
        
        public CEC.Web.Api.GetElectionDataSaise.ElectionCircumscriptionsResponse GetElectionCircumscriptions(CEC.Web.Api.GetElectionDataSaise.ElectionCircumscriptionsRequest request) {
            return base.Channel.GetElectionCircumscriptions(request);
        }
        
        public System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionCircumscriptionsResponse> GetElectionCircumscriptionsAsync(CEC.Web.Api.GetElectionDataSaise.ElectionCircumscriptionsRequest request) {
            return base.Channel.GetElectionCircumscriptionsAsync(request);
        }
        
        public CEC.Web.Api.GetElectionDataSaise.ElectionPollingStationsResponse GetElectionPollingStations(CEC.Web.Api.GetElectionDataSaise.ElectionPollingStationsRequest request) {
            return base.Channel.GetElectionPollingStations(request);
        }
        
        public System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionPollingStationsResponse> GetElectionPollingStationsAsync(CEC.Web.Api.GetElectionDataSaise.ElectionPollingStationsRequest request) {
            return base.Channel.GetElectionPollingStationsAsync(request);
        }
        
        public CEC.Web.Api.GetElectionDataSaise.ElectionRegions GetElectionRegions(long electionRoundId) {
            return base.Channel.GetElectionRegions(electionRoundId);
        }
        
        public System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionRegions> GetElectionRegionsAsync(long electionRoundId) {
            return base.Channel.GetElectionRegionsAsync(electionRoundId);
        }
        
        public CEC.Web.Api.GetElectionDataSaise.ElectionCompetitors GetElectionCompetitors(CEC.Web.Api.GetElectionDataSaise.ElectionCompetitorsRequest request) {
            return base.Channel.GetElectionCompetitors(request);
        }
        
        public System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionCompetitors> GetElectionCompetitorsAsync(CEC.Web.Api.GetElectionDataSaise.ElectionCompetitorsRequest request) {
            return base.Channel.GetElectionCompetitorsAsync(request);
        }
        
        public CEC.Web.Api.GetElectionDataSaise.ElectionMembers GetElectionMembers(CEC.Web.Api.GetElectionDataSaise.ElectionMembersRequest request) {
            return base.Channel.GetElectionMembers(request);
        }
        
        public System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionMembers> GetElectionMembersAsync(CEC.Web.Api.GetElectionDataSaise.ElectionMembersRequest request) {
            return base.Channel.GetElectionMembersAsync(request);
        }
        
        public CEC.Web.Api.GetElectionDataSaise.ElectionObservers GetElectionObservers(CEC.Web.Api.GetElectionDataSaise.ElectionObserversRequest request) {
            return base.Channel.GetElectionObservers(request);
        }
        
        public System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionObservers> GetElectionObserversAsync(CEC.Web.Api.GetElectionDataSaise.ElectionObserversRequest request) {
            return base.Channel.GetElectionObserversAsync(request);
        }
        
        public void SetPollingStationAddress(long pollingStationId, string address) {
            base.Channel.SetPollingStationAddress(pollingStationId, address);
        }
        
        public System.Threading.Tasks.Task SetPollingStationAddressAsync(long pollingStationId, string address) {
            return base.Channel.SetPollingStationAddressAsync(pollingStationId, address);
        }
        
        public void SetElectionResults(CEC.Web.Api.GetElectionDataSaise.ElectionResult electionResults) {
            base.Channel.SetElectionResults(electionResults);
        }
        
        public System.Threading.Tasks.Task SetElectionResultsAsync(CEC.Web.Api.GetElectionDataSaise.ElectionResult electionResults) {
            return base.Channel.SetElectionResultsAsync(electionResults);
        }
        
        public CEC.Web.Api.GetElectionDataSaise.ElectionCircumscriptionPollingStation GetElectionCircumscriptionPollingStation(long pollingStationId, long electionRoundId, long electionCircumscriptionListId) {
            return base.Channel.GetElectionCircumscriptionPollingStation(pollingStationId, electionRoundId, electionCircumscriptionListId);
        }
        
        public System.Threading.Tasks.Task<CEC.Web.Api.GetElectionDataSaise.ElectionCircumscriptionPollingStation> GetElectionCircumscriptionPollingStationAsync(long pollingStationId, long electionRoundId, long electionCircumscriptionListId) {
            return base.Channel.GetElectionCircumscriptionPollingStationAsync(pollingStationId, electionRoundId, electionCircumscriptionListId);
        }
    }
}
