@using CEC.Web.SRV.Infrastructure.Grids
@using CEC.Web.SRV.Models.Address
@using CEC.Web.SRV.Resources
@using Lib.Web.Mvc.JQuery.JqGrid

@{
    ViewBag.Title = MUI.StreetTypes_TabTitle;
}

@{
    var grid = Html.GridOptions<AddressAdministrativeGridModel>("addresses")
        .BuildGrid(Url.Action("ListAddressesAdministrativeAjax"),
            deleteAction: null,
            addAction: null,
            editAction: null,
            unDeleteAction: Url.Action("UnDeleteAddress", "Address"),
            historyAction: Url.Action("AddressHistory", "History"))
        .Navigator(new JqGridNavigatorOptions()
        {
            Add = true, Edit = true, Delete = true, CloneToTop = true,
            AddFunction = "$.SaveAdministrativeAddress",
            EditFunction = "$.SaveAdministrativeAddress",
            DeleteFunction = "$.DeleteAddress"
        })
        .AddNavigatorButton("Geolocalizare", onClick: "setGeolocation");
        
}

@grid.GetHtml()

<script type="text/javascript">
    
    $(document).ready(function() {
        @grid.GetJavaScript();

        $('#addresses').jqGrid('bindKeys');
        $('#addresses').jqGrid().remapColumns([1, 2, 3, 0, 4, 5, 6, 7, 8, 9], true, false);
        $.getScript('https://maps.google.com/maps/api/js?sensor=false&callback=OpenLayersMap');
    });

    function getVal(value, options) {
        //var showedElement = $('<input role="textbox" class="editable ui-autocomplete-input" style="width: 98%;" type="text" id="' + options.id + '" name="' + options.name + '">');
        var showedElement = $('<input role="textbox" class="editable ui-autocomplete-input" style="width: 98%;" type="text" id="' + options.id + '">');
        var hiddenInput = $('<input type="hidden" id="' + options.id + '_hidden" name="' + options.name + '">');

        showedElement.val(value);

        $(showedElement).autocomplete({
            source: options.dataUrl,
            autoFocus: true,
            select: function(event, ui) {
                $(showedElement).val(ui.item.StreetName);
                $(hiddenInput).val(ui.item.StreetId);
                return false;
            }
        })
            .data("ui-autocomplete")
            ._renderItem = function(ul, item) {
                if (item === undefined) {
                    return ul;
                }
                return $("<li>")
                    .data("item.autocomplete", item)
                    .append("<a>" + item.StreetName + "</a>")
                    .appendTo(ul);
            };
        var div = $('<div>')
            //.attr('id', options.name)
            .append(showedElement)
            .append(hiddenInput);
        return div;
    }

    function setGeolocation() {
        var selections = GetGridSelections();
	    
        if (selections == null || selections.length == 0) {
            BootstrapDialog.alert({message: '@MUI.StreetsNotSelectedAlertMessage', title: '@MUI.DialogTitle_Information' });
            return;
        }
	    
        var url = '@Url.Action("UpdateGeolocation","Address")';
        var dialogTitle = '@MUI.SetGeolocationAdd_DialogTitle';
	    
        $.openDialog($(this), {
            url: url + '?id=' + selections,
            draggable: false,
            title: dialogTitle,
            onShown: function (dialog) {
                $.renderMap();
            },
            onBeforeSubmit: function (form) {
                var latitude = form.find('#Geolatitude');
                var longitude = form.find('#Geolongitude');
                var valid = latitude.val() != "" && longitude.val() != "";
                if (!valid) {
                    BootstrapDialog.alert({message: 'Coordonatele nu sunt selectate', title: '@MUI.DialogTitle_Information' });
                }
                return valid;
            },
            onSubmit: function () {
                $("#addresses").trigger('reloadGrid');
            }
        });
    }

    $.renderMap = function () {
        var url = '@Url.Action("GetLocation","Address")';
        var regionId = GetTreeSelections();
        var adressId = GetGridSelections();
        $.ajax({
            type: "POST",
            url: url,
            dataType: 'json',
            data: { regionId: regionId, adressId: adressId },
            success: function (data) {
                var lat = 47.0;
                var lon = 29.0;
                var zoomLevel = null;
                var isLocation = false;
					
                if (data.AdressGeoData == null && data.RegionGeoData != null) {
                    lat = data.RegionGeoData.Latitude;
                    lon = data.RegionGeoData.Longitude;
                    zoomLevel = 12;
                } else if (data.AdressGeoData != null) {
                    lat = data.AdressGeoData.Latitude;
                    lon = data.AdressGeoData.Longitude;
                    zoomLevel = 17;
                    isLocation = true;
                }
					
                var osmap1 = new OpenLayers.Layer.OSM("OpenStreetMap");
                var map2_layers = [osmap1];
                var map2 = drawMap(lon, lat, "map-2", map2_layers, zoomLevel, isLocation);
                $("#map-2").resize(function () {
                    setTimeout(map2.updateSize(), 300);
                });
            }
        });
    };
    
    function GetGridSelections() {
        var selections = $("#addresses").jqGrid('getGridParam', 'selrow');
        return selections;
    }
	
    function GetTreeSelections() {
        var selections = $("#regionsGrid").jqGrid('getGridParam', 'selrow');
        return selections;
    }

    function OpenLayersMap() {
        LoadOpenLayersScript();
    }

</script>