//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CEC.Web.SRV.LoggingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogEvent", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    [System.SerializableAttribute()]
    public partial class LogEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CodeField;
        
        private CEC.Web.SRV.LoggingService.LogLevel LevelField;
        
        private string MessageField;
        
        private System.DateTime GeneratedAtField;
        
        private string UserIdentityField;
        
        private string UserMachineIpField;
        
        private string UserSessionIdField;
        
        private System.Collections.Generic.Dictionary<string, string> ParametersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public CEC.Web.SRV.LoggingService.LogLevel Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime GeneratedAt {
            get {
                return this.GeneratedAtField;
            }
            set {
                if ((this.GeneratedAtField.Equals(value) != true)) {
                    this.GeneratedAtField = value;
                    this.RaisePropertyChanged("GeneratedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string UserIdentity {
            get {
                return this.UserIdentityField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdentityField, value) != true)) {
                    this.UserIdentityField = value;
                    this.RaisePropertyChanged("UserIdentity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public string UserMachineIp {
            get {
                return this.UserMachineIpField;
            }
            set {
                if ((object.ReferenceEquals(this.UserMachineIpField, value) != true)) {
                    this.UserMachineIpField = value;
                    this.RaisePropertyChanged("UserMachineIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public string UserSessionId {
            get {
                return this.UserSessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSessionIdField, value) != true)) {
                    this.UserSessionIdField = value;
                    this.RaisePropertyChanged("UserSessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.Collections.Generic.Dictionary<string, string> Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogLevel", Namespace="http://schemas.datacontract.org/2004/07/SAISE.Admin.WebApp.WebServices.Types")]
    public enum LogLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknwon = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fatal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Debug = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trace = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoggingService.ILoggingService")]
    public interface ILoggingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoggingService/Log", ReplyAction="http://tempuri.org/ILoggingService/LogResponse")]
        void Log(CEC.Web.SRV.LoggingService.LogEvent logEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoggingService/Log", ReplyAction="http://tempuri.org/ILoggingService/LogResponse")]
        System.Threading.Tasks.Task LogAsync(CEC.Web.SRV.LoggingService.LogEvent logEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoggingService/MLog", ReplyAction="http://tempuri.org/ILoggingService/MLogResponse")]
        void MLog(CEC.Web.SRV.LoggingService.LogEvent logEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoggingService/MLog", ReplyAction="http://tempuri.org/ILoggingService/MLogResponse")]
        System.Threading.Tasks.Task MLogAsync(CEC.Web.SRV.LoggingService.LogEvent logEvent);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoggingServiceChannel : CEC.Web.SRV.LoggingService.ILoggingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoggingServiceClient : System.ServiceModel.ClientBase<CEC.Web.SRV.LoggingService.ILoggingService>, CEC.Web.SRV.LoggingService.ILoggingService {
        
        public LoggingServiceClient() {
        }
        
        public LoggingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoggingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Log(CEC.Web.SRV.LoggingService.LogEvent logEvent) {
            base.Channel.Log(logEvent);
        }
        
        public System.Threading.Tasks.Task LogAsync(CEC.Web.SRV.LoggingService.LogEvent logEvent) {
            return base.Channel.LogAsync(logEvent);
        }
        
        public void MLog(CEC.Web.SRV.LoggingService.LogEvent logEvent) {
            base.Channel.MLog(logEvent);
        }
        
        public System.Threading.Tasks.Task MLogAsync(CEC.Web.SRV.LoggingService.LogEvent logEvent) {
            return base.Channel.MLogAsync(logEvent);
        }
    }
}
